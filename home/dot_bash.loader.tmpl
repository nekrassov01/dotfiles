#!/usr/bin/env bash

# load: lang
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# load: disable bash warning message
export BASH_SILENCE_DEPRECATION_WARNING=1

# load: prompt command
# Some command will be loaded after this basic prompt command setup
export PROMPT_COMMAND="history -a;history -c;history -r"

# bash: history setting
export HISTTIMEFORMAT="%F %T "
export HISTSIZE="32768"
export HISTFILESIZE="$HISTSIZE"
export HISTCONTROL="ignoreboth"
export HISTIGNORE=exit:bg:fg:clear:pwd:ls:l:ll:history:top:w:env:envs:reload

# load: ls color setting, and `ls` aliases
export CLICOLOR_FORCE=1
if ls --color &>/dev/null; then
  export LS_COLORS='no=00:fi=00:di=36:ln=35:pi=30;44:so=35;44:do=35;44:bd=33;44:cd=37;44:or=05;37;41:mi=05;37;41:ex=01;31:*.cmd=01;31:*.exe=01;31:*.com=01;31:*.bat=01;31:*.reg=01;31:*.app=01;31:*.txt=32:*.org=32:*.md=32:*.mkd=32:*.bib=32:*.h=32:*.hpp=32:*.c=32:*.C=32:*.cc=32:*.cpp=32:*.cxx=32:*.objc=32:*.cl=32:*.sh=32:*.bash=32:*.csh=32:*.zsh=32:*.el=32:*.vim=32:*.java=32:*.pl=32:*.pm=32:*.py=32:*.rb=32:*.hs=32:*.php=32:*.htm=32:*.html=32:*.shtml=32:*.erb=32:*.haml=32:*.xml=32:*.rdf=32:*.css=32:*.sass=32:*.scss=32:*.less=32:*.js=32:*.coffee=32:*.man=32:*.0=32:*.1=32:*.2=32:*.3=32:*.4=32:*.5=32:*.6=32:*.7=32:*.8=32:*.9=32:*.l=32:*.n=32:*.p=32:*.pod=32:*.tex=32:*.go=32:*.sql=32:*.csv=32:*.sv=32:*.svh=32:*.v=32:*.vh=32:*.vhd=32:*.bmp=33:*.cgm=33:*.dl=33:*.dvi=33:*.emf=33:*.eps=33:*.gif=33:*.jpeg=33:*.jpg=33:*.JPG=33:*.mng=33:*.pbm=33:*.pcx=33:*.pdf=33:*.pgm=33:*.png=33:*.PNG=33:*.ppm=33:*.pps=33:*.ppsx=33:*.ps=33:*.svg=33:*.svgz=33:*.tga=33:*.tif=33:*.tiff=33:*.xbm=33:*.xcf=33:*.xpm=33:*.xwd=33:*.xwd=33:*.yuv=33:*.NEF=33:*.nef=33:*.aac=33:*.au=33:*.flac=33:*.m4a=33:*.mid=33:*.midi=33:*.mka=33:*.mp3=33:*.mpa=33:*.mpeg=33:*.mpg=33:*.ogg=33:*.opus=33:*.ra=33:*.wav=33:*.anx=33:*.asf=33:*.avi=33:*.axv=33:*.flc=33:*.fli=33:*.flv=33:*.gl=33:*.m2v=33:*.m4v=33:*.mkv=33:*.mov=33:*.MOV=33:*.mp4=33:*.mp4v=33:*.mpeg=33:*.mpg=33:*.nuv=33:*.ogm=33:*.ogv=33:*.ogx=33:*.qt=33:*.rm=33:*.rmvb=33:*.swf=33:*.vob=33:*.webm=33:*.wmv=33:*.doc=31:*.docx=31:*.rtf=31:*.odt=31:*.dot=31:*.dotx=31:*.ott=31:*.xls=31:*.xlsx=31:*.ods=31:*.ots=31:*.ppt=31:*.pptx=31:*.odp=31:*.otp=31:*.fla=31:*.psd=31:*.7z=1;35:*.apk=1;35:*.arj=1;35:*.bin=1;35:*.bz=1;35:*.bz2=1;35:*.cab=1;35:*.deb=1;35:*.dmg=1;35:*.gem=1;35:*.gz=1;35:*.iso=1;35:*.jar=1;35:*.msi=1;35:*.rar=1;35:*.rpm=1;35:*.tar=1;35:*.tbz=1;35:*.tbz2=1;35:*.tgz=1;35:*.tx=1;35:*.war=1;35:*.xpi=1;35:*.xz=1;35:*.z=1;35:*.Z=1;35:*.zip=1;35:*.zst=1;35:*.ANSI-30-black=30:*.ANSI-01;30-brblack=01;30:*.ANSI-31-red=31:*.ANSI-01;31-brred=01;31:*.ANSI-32-green=32:*.ANSI-01;32-brgreen=01;32:*.ANSI-33-yellow=33:*.ANSI-01;33-bryellow=01;33:*.ANSI-34-blue=34:*.ANSI-01;34-brblue=01;34:*.ANSI-35-magenta=35:*.ANSI-01;35-brmagenta=01;35:*.ANSI-36-cyan=36:*.ANSI-01;36-brcyan=01;36:*.ANSI-37-white=37:*.ANSI-01;37-brwhite=01;37:*.log=01;32:*~=01;32:*#=01;32:*.bak=01;36:*.BAK=01;36:*.old=01;36:*.OLD=01;36:*.org_archive=01;36:*.off=01;36:*.OFF=01;36:*.dist=01;36:*.DIST=01;36:*.orig=01;36:*.ORIG=01;36:*.swp=01;36:*.swo=01;36:*.v=01;36:*.gpg=34:*.gpg=34:*.pgp=34:*.asc=34:*.3des=34:*.aes=34:*.enc=34:*.sqlite=34:*.db=34:'
  alias ls='ls -hF --color=always --group-directories-first'
  alias l='ls -l --full-time'
  alias ll='ls -lA --full-time'
else
  export LSCOLORS='gxfxcxdxbxegedabagacad'
  alias ls='ls -hF -G'
  alias l='ls -l'
  alias ll='ls -lA'
fi

# load: basic path
PATH="$HOME"/.local/bin:{{ if eq .chezmoi.arch "arm64" }}/opt/homebrew/bin{{ else }}"$HOME"/.homebrew/bin{{ end }}:$PATH

# load: tools installed by brew
if has brew; then
  brew_prefix=$(brew --prefix)

  # load: Compatibility with bash completion v1
  if [[ -d "$brew_prefix/etc/bash_completion.d" ]]; then
    export BASH_COMPLETION_COMPAT_DIR="$brew_prefix/etc/bash_completion.d"
  fi

  # load: scripts under profile.d
  for prof in "$brew_prefix/etc/profile.d/"*.sh; do
    if [[ -r "$prof" ]]; then
      source "$prof"
    fi
  done
  unset prof

  # load: scripts under bash_completion.d
  for comp in "$brew_prefix/etc/bash_completion.d/"*; do
    if [[ -r "$comp" ]]; then
      source "$comp"
    fi
  done
  unset comp

  # load: gnu tools path
  for gnubinpath in "$brew_prefix"/opt/{coreutils,findutils,gnu-sed,gnu-tar,grep}/libexec/gnubin; do
    if [[ -e "$gnubinpath" && -r "$gnubinpath" ]]; then
      PATH="$gnubinpath:$PATH"
    fi
  done
  unset gnubinpath

  # load: gnu man path
  for gnumanpath in "$brew_prefix"/opt/{coreutils,findutils,gnu-sed,gnu-tar,grep}/libexec/gnuman; do
    if [[ -e "$gnumanpath" && -r "$gnumanpath" ]]; then
      MANPATH="$gnumanpath:$MANPATH"
    fi
  done
  unset gnumanpath

  # load: fzf completion
  if has fzf; then
    brew_fzf_prefix=$(brew --prefix fzf)
    source "$brew_fzf_prefix/shell/completion.bash" 2>/dev/null
    source "$brew_fzf_prefix/shell/key-bindings.bash" 2>/dev/null
    unset brew_fzf_prefix
  fi

  # cleanup: brew path prefix
  unset brew_prefix
fi

# load: fzf settings
if has fzf; then
  export FZF_DEFAULT_COMMAND='ls -A'
  export FZF_DEFAULT_OPTS='--layout=reverse --border --inline-info --height=100%'
  if has rg; then
    # shouldn't be used in home directory
    export FZF_CTRL_T_COMMAND='rg --files --hidden --follow --glob "!**/.git/*" --glob "!**/node_modules/*"'
  fi
  if has bat; then
    export FZF_CTRL_T_OPTS='--preview-window=60% --preview "bat --color=always --style=header,grid --line-range :100 {}"'
  fi
fi

# Since my main focus is vscode, I decided not to do item2 shell integration
#if [ -f "$HOME/.iterm2_shell_integration.bash" ]; then
#    source "$HOME/.iterm2_shell_integration.bash"
#fi

# load: default editor
if has code; then
  export EDITOR="code"
fi

# load: chezmoi completion
if has chezmoi; then
  eval "$(chezmoi completion bash)"
fi

# load: rancher settings
if [[ -d "$HOME/.rd" ]]; then
  export PATH="$HOME/.rd/bin:$PATH"
  eval "$("$HOME"/.rd/bin/rdctl completion bash)"
fi

# load: docker settings
if has docker; then
  eval "$(docker completion bash)"
fi

# load: tools installed by mise
if has mise; then
  eval "$(mise activate bash)"
fi

# load: go settings
if has go; then
  export GO111MODULE=on
fi

# load: rye settings
if has rye; then
  # Manually add to path to maintain order
  # source "$HOME/.rye/env"
  PATH=$HOME/.rye/shims:$PATH
  eval "$(rye self completion)"
  export PYTHONIOENCODING="UTF-8"
fi

# load: node settings
if has node; then
  export NODE_REPL_HISTORY_SIZE="32768"
fi

# load: aws settings
if has aws; then
  complete -C "aws_completer" aws
  export AWS_PAGER=""
fi

# load: rdsc completion
if has rdsc; then
  eval "$(rdsc completion bash)"
fi

# load: alpen completion
if has alpen; then
  eval "$(alpen --completion bash)"
fi

# load: tlc3 completion
if has tlc3; then
  eval "$(tlc3 --completion bash)"
fi

# optimize: PATH
_path=""
for _p in $(echo "$PATH" | tr ':' ' '); do
  case ":${_path}:" in
  *:"${_p}":*) ;;
  *)
    if [ "$_path" ]; then
      _path="$_path:$_p"
    else
      _path=$_p
    fi
    ;;
  esac
done
PATH=$_path

export PATH
unset _p
unset _path

# optimize: MANPATH
_manpath=""
for _mp in $(echo "$MANPATH" | tr ':' ' '); do
  case ":${_manpath}:" in
  *:"${_mp}":*) ;;
  *)
    if [ "$_manpath" ]; then
      _manpath="$_manpath:$_mp"
    else
      _manpath=$_mp
    fi
    ;;
  esac
done
MANPATH=$_manpath

export MANPATH
unset _mp
unset _manpath

# load: ghq root
MY_REPOSITORY_DIR="$HOME/.repository"
if [[ ! -e "$MY_REPOSITORY_DIR" ]]; then
  export MY_REPOSITORY_DIR
fi

{{ if eq .chezmoi.hostname "kawashima2" -}}
# load: box directory
MY_BOX_DIR="$HOME/Library/CloudStorage/Box-Box/kawashima"
if [[ ! -e "$MY_BOX_DIR" ]]; then
  export MY_BOX_DIR
fi

# load: project directory
MY_PROJECT_DIR="$HOME/Library/CloudStorage/Box-Box/kawashima/project"
if [[ ! -e "$MY_PROJECT_DIR" ]]; then
  export MY_PROJECT_DIR
fi
{{- end }}
