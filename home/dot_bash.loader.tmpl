#!/usr/bin/env bash

# load: lang
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# load: disable bash warning message
export BASH_SILENCE_DEPRECATION_WARNING=1

# load: prompt command
# Some command will be loaded after this basic prompt command setup
export PROMPT_COMMAND="history -a;history -c;history -r"

# bash: history setting
export HISTTIMEFORMAT="%F %T "
export HISTSIZE="32768"
export HISTFILESIZE="$HISTSIZE"
export HISTCONTROL="ignoreboth"
declare -a ignore_hist_commands=(
  "exit"
  "bg"
  "fg"
  "clear"
  "cls" # alias
  "pwd"
  "ls"
  "l"   # alias
  "ll"  # alias
  "dir" # alias
  "history"
  "top"
  "w"
  "env"
  "envs"   # alias
  "reload" # alias
)
HISTIGNORE="$(
  IFS=":"
  echo "${ignore_hist_commands[*]}"
)"
export HISTIGNORE
unset ignore_hist_commands

# load: basic ls color setting
export CLICOLOR=1
export LSCOLORS="gxfxcxdxbxegedabagacad"

# load: additional ls color setting, and `ls` aliases
if has gdircolors; then
  if [[ -e "$HOME/.colorrc" ]]; then
    eval "$(gdircolors -b "$HOME/.colorrc")" &>/dev/null
  fi
  alias ls='ls -hF --color=always --group-directories-first'
  alias l='ls -l --full-time'
  alias ll='ls -al --full-time'
  alias dir='ls -al --full-time'
else
  alias ls='ls -hF -G'
  alias l='ls -l'
  alias ll='ls -al'
  alias dir='ls -al'
fi

# load: basic path
PATH="$HOME"/.local/bin:{{ if eq .chezmoi.arch "arm64" }}/opt/homebrew/bin{{ else }}"$HOME"/.homebrew/bin{{ end }}:$PATH

# load: tools installed by brew
if has brew; then
  brew_prefix=$(brew --prefix)

  # load: Compatibility with bash completion v1
  if [[ -d "$brew_prefix/etc/bash_completion.d" ]]; then
    export BASH_COMPLETION_COMPAT_DIR="$brew_prefix/etc/bash_completion.d"
  fi

  # load: scripts under profile.d
  for prof in "$brew_prefix/etc/profile.d/"*.sh; do
    if [[ -r "$prof" ]]; then
      source "$prof"
    fi
  done
  unset prof

  # load: scripts under bash_completion.d
  for comp in "$brew_prefix/etc/bash_completion.d/"*; do
    if [[ -r "$comp" ]]; then
      source "$comp"
    fi
  done
  unset comp

  # load: gnu tools path
  for gnubinpath in "$brew_prefix"/opt/{coreutils,findutils,gnu-sed,gnu-tar,grep}/libexec/gnubin; do
    if [[ -e "$gnubinpath" && -r "$gnubinpath" ]]; then
      PATH="$gnubinpath:$PATH"
    fi
  done
  unset gnubinpath

  # load: gnu man path
  for gnumanpath in "$brew_prefix"/opt/{coreutils,findutils,gnu-sed,gnu-tar,grep}/libexec/gnuman; do
    if [[ -e "$gnumanpath" && -r "$gnumanpath" ]]; then
      MANPATH="$gnumanpath:$MANPATH"
    fi
  done
  unset gnumanpath

  # load: fzf completion
  if has fzf; then
    brew_fzf_prefix=$(brew --prefix fzf)
    source "$brew_fzf_prefix/shell/completion.bash" 2>/dev/null
    source "$brew_fzf_prefix/shell/key-bindings.bash" 2>/dev/null
    unset brew_fzf_prefix
  fi

  # cleanup: brew path prefix
  unset brew_prefix
fi

# load: fzf settings
if has fzf; then
  export FZF_DEFAULT_COMMAND='ls -A'
  export FZF_DEFAULT_OPTS='--layout=reverse --border --inline-info --height=100%'
  if has rg; then
    # shouldn't be used in home directory
    export FZF_CTRL_T_COMMAND='rg --files --hidden --follow --glob "!**/.git/*" --glob "!**/node_modules/*"'
  fi
  if has bat; then
    export FZF_CTRL_T_OPTS='--preview-window=60% --preview "bat --color=always --style=header,grid --line-range :100 {}"'
  fi
fi

# Since my main focus is vscode, I decided not to do item2 shell integration
#if [ -f "$HOME/.iterm2_shell_integration.bash" ]; then
#    source "$HOME/.iterm2_shell_integration.bash"
#fi

# load: default editor
if has code; then
  export EDITOR="code"
fi

# load: chezmoi completion
if has chezmoi; then
  eval "$(chezmoi completion bash)"
fi

# load: rancher settings
if [[ -d "$HOME/.rd" ]]; then
  export PATH="$HOME/.rd/bin:$PATH"
  eval "$("$HOME"/.rd/bin/rdctl completion bash)"
fi

# load: docker settings
if has docker; then
  eval "$(docker completion bash)"
fi

# load: tools installed by mise
if has mise; then
  eval "$(mise activate bash)"
fi

# load: go settings
if has go; then
  export GO111MODULE=on
fi

# load: rye settings
if has rye; then
  # Manually add to path to maintain order
  # source "$HOME/.rye/env"
  PATH=$HOME/.rye/shims:$PATH
  eval "$(rye self completion)"
  export PYTHONIOENCODING="UTF-8"
fi

# load: node settings
if has node; then
  export NODE_REPL_HISTORY_SIZE="32768"
fi

# load: aws settings
if has aws; then
  complete -C "aws_completer" aws
  export AWS_PAGER=""
fi

# load: rdsc completion
if has rdsc; then
  eval "$(rdsc completion bash)"
fi

# load: alpen completion
if has alpen; then
  eval "$(alpen --completion bash)"
fi

# load: tlc3 completion
if has tlc3; then
  eval "$(tlc3 --completion bash)"
fi

# optimize: PATH
_path=""
for _p in $(echo "$PATH" | tr ':' ' '); do
  case ":${_path}:" in
  *:"${_p}":*) ;;
  *)
    if [ "$_path" ]; then
      _path="$_path:$_p"
    else
      _path=$_p
    fi
    ;;
  esac
done
PATH=$_path

export PATH
unset _p
unset _path

# optimize: MANPATH
_manpath=""
for _mp in $(echo "$MANPATH" | tr ':' ' '); do
  case ":${_manpath}:" in
  *:"${_mp}":*) ;;
  *)
    if [ "$_manpath" ]; then
      _manpath="$_manpath:$_mp"
    else
      _manpath=$_mp
    fi
    ;;
  esac
done
MANPATH=$_manpath

export MANPATH
unset _mp
unset _manpath

# load: ghq root
MY_REPOSITORY_DIR="$HOME/.repository"
if [[ ! -e "$MY_REPOSITORY_DIR" ]]; then
  export MY_REPOSITORY_DIR
fi

{{ if eq .chezmoi.hostname "kawashima2" -}}
# load: box directory
MY_BOX_DIR="$HOME/Library/CloudStorage/Box-Box/kawashima"
if [[ ! -e "$MY_BOX_DIR" ]]; then
  export MY_BOX_DIR
fi

# load: project directory
MY_PROJECT_DIR="$HOME/Library/CloudStorage/Box-Box/kawashima/project"
if [[ ! -e "$MY_PROJECT_DIR" ]]; then
  export MY_PROJECT_DIR
fi
{{- end }}
